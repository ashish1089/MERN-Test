"use client";
import Head from "next/head";
import Link from "next/link";
import { useState, type FormEvent } from "react";
import { api } from "~/utils/api";
import { useRouter } from "next/router";

interface UserInput {
  username: string;
  email: string;
  password: string;
}
export default function Home() {
  const router = useRouter();
  const [userInput, setUserInput] = useState<UserInput>({
    username: "",
    email: "",
    password: "",
  });

  const addNewUser = api.user.create.useMutation();
  const { data: isUserExist } = api.user.exits.useQuery({
    email: userInput.email,
  });

  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setUserInput({ ...userInput, [event.target.name]: event.target.value });
  };

  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();

    // if (isUserExist) {
    //   console.log("user Exist ", isUserExist);
    //   await router.push("/login");
    // } else {
    //   addNewUser.mutate({
    //     username: userInput.username,
    //     email: userInput.email,
    //     password: userInput.password,
    //   });
    console.log("User SignUp successfully");
    // await router.push(`/verify?query${userInput.email}`);
    await router.push({
      pathname: "verify",
      query: {
        email: userInput.email,
      },
    });
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mx-auto h-max  max-w-[1440px]">
        <div className="mx-auto mt-8 h-[691px] w-[576px] rounded-[20px] border-2 px-[60px] pt-8">
          <form action="post" onSubmit={handleSubmit}>
            <h1 className="pb-6 text-center text-[32px] font-semibold">
              Create your account
            </h1>
            <label htmlFor="username">
              Name
              <input
                type="text"
                value={userInput.username}
                onChange={handleChange}
                name="username"
                placeholder="Enter"
                className="mb-7 mt-2 w-full rounded-[6px] border px-4 py-3 "
              />
            </label>
            <label htmlFor="email">
              Email
              <input
                type="email"
                value={userInput.email}
                onChange={handleChange}
                name="email"
                placeholder="Enter"
                className="mb-7 mt-2 w-full rounded-[6px] border px-4 py-3 "
              />
            </label>
            <label htmlFor="password">
              Password
              <input
                type="password"
                value={userInput.password}
                onChange={handleChange}
                name="password"
                placeholder="Enter"
                className="mb-7 mt-2 w-full rounded-[6px] border px-4 py-3 "
              />
            </label>

            <button
              className="mt-4 h-[56px] w-[456px] rounded-[6px] bg-black text-white"
              type="submit"
            >
              CREATE ACCOUNT
            </button>
          </form>

          <p className="my-10 text-center text-[#333]">
            Have an Account?
            <span className="ml-3 font-medium">
              <Link href="/login">LOGIN</Link>
            </span>
          </p>
        </div>
      </main>
    </>
  );
}
